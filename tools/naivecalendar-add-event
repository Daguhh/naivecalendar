#!/usr/bin/env bash

help_msg () {
    echo """
**usage:** naivecalendar *add-event* [-h] [-o] [-n|-d EVENT_NAME] [-v NEW_VALUE] 

Add a new event entry in ~/.config/naivecalendar/global/events.cfg

**optional arguments:**
  -h, --help              show this help message and exit
  -n EVENT_NAME, --new EVENT_NAME    
                          name of the new event 
  -v NEW_VALUE, --value NEW_VALUE            
                          value of the new event (see any config file for format)
  -o, --override          override value if event already exist
  -d EVENT_NAME, --delete EVENT_NAME
                          delete event
"""
}

# Yes/No question with default
askYesNo () {
        QUESTION=$1
        DEFAULT=$2
        if [ "$DEFAULT" = true ]; then                    # Valeur par défaut définie en paramètre
                OPTIONS="[Y/n]"
                DEFAULT="o"
            else
                OPTIONS="[y/N]"
                DEFAULT="n"
        fi
        read -p "$QUESTION $OPTIONS " -n 1 -s -r INPUT    # Execute au premier caractère (-n 1)
        INPUT=${INPUT:-${DEFAULT}}                        # Si $INPUT vide => remplace par $DEFAULT
        echo ${INPUT}
        if [[ "$INPUT" =~ ^[yYoO]$ ]]; then               # True si y,Y,O ou o
            ANSWER=true
        else                                              # Faux pour le reste
            ANSWER=false
        fi
}


option="$@"

# prevent ambiguous usage
if [[ " ${option[@]} " =~ " -n " ]] || [[ " ${option[@]} " =~ " --name " ]] ; then
    if [[ " ${option[@]} " =~ " -d " ]] || [[ " ${option[@]} " =~ " --delete " ]] ; then
        printf "You can't set -n|--new and -d|--delete at the same time\n"
    fi
fi

# get named parameters
while [ $# -gt 0 ] ; do
    key="$1"
    case $key in
        -h|--help)
            help_msg 
            exit 0
            ;;
        -n|--new)
            NEW_EVENT="$2"
            shift # past argument
            ;;
        -v|--value)
            NEW_VALUE="$2"
            shift # past argument
            ;;
        -o|--override)
            ;;
        -d|--delete)
            NEW_EVENT="$2"
            shift # past argument
            ;;
        *)
          printf "**************************\n"
          printf " Wrong argument : $1\n"
          printf "**************************\n"
          exit 1
    esac
    shift # past value
done



EVENT_FILE="$HOME/.config/naivecalendar/global/events.cfg"

if ! [ -e "$EVENT_FILE" ]; then
    askYesNo "No event file found! Do you want to create one?" true
    if [ "$ANSWER" = true ]; then
        mkdir -p ${EVENT_FILE%/*}
        cp "$(dirname $0)/../global/events.cfg" "$EVENT_FILE"
        echo "$EVENT_FILE created!"
    else
        echo "Bye!"
        exit 0
    fi
fi

# delete line that contain NEW_EVENT
if  [[ " ${option[@]} " =~ " -d " ]] || [[ " ${option[@]} " =~ " --delete " ]]  ; then

    i=0
    if cat  $EVENT_FILE | grep -w ^$NEW_EVENT > /dev/null ; then
        sed -i '/^'$NEW_EVENT' /d' $EVENT_FILE
    fi

    exit 0

fi

# Quit if value already exist (without overirde option)
if ! ( [[ " ${option[@]} " =~ " -o " ]] || [[ " ${option[@]} " =~ " --override " ]] ) ; then

    if cat $EVENT_FILE | grep -w ^$NEW_EVENT > /dev/null ; then
        printf "*************************************************************\n"
        printf "$NEW_EVENT already exist\n"
        printf "quitting, please use -o|--override to force the new value\n"
        printf "*************************************************************\n"
        exit 0
    fi 

fi

# Add or overide new event and its value

TEMP_FILE=naivecalendar_tmp

# If already exist, override value
if cat  $EVENT_FILE | grep -w ^$NEW_EVENT > /dev/null ; then
    expr="s/("$NEW_EVENT" =).*/\1 "${NEW_VALUE//\//\\/}"/g" # escape slash
    sed -i -r "$expr" $EVENT_FILE
# else create new entry after first paragraph of [EVENTS] section 
else 
    #awk '/\[EVENTS\]/{print;print "$NEW_EVENT = $NEW_VALUE";next}1' RS="\n\n" ORS="\n\n" $EVENT_FILE
    awk '/^\[EVENTS\]/{print;print "'$NEW_EVENT' = '$NEW_VALUE'";next}1' RS="\n\n" ORS="\n\n" $EVENT_FILE > $TEMP_FILE && mv $TEMP_FILE $EVENT_FILE

fi

echo "done, Bye!"

